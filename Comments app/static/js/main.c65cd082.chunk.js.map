{"version":3,"sources":["components/CommentItem/index.js","components/Comments/index.js","App.js","index.js"],"names":["CommentItem","props","commentDetails","id","name","comment","isLiked","initialClassName","date","initial","toUpperCase","likeTextClassName","likeImageUrl","postedTime","formatDistanceToNow","_jsxs","className","children","_jsx","src","alt","type","onClick","toggleIsLiked","deleteComment","initialContainerBackgroundClassNames","Comments","_Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","state","nameInput","commentInput","commentsList","commentId","setState","filter","prevState","map","eachComment","_objectSpread","renderCommentsList","onAddComment","event","preventDefault","_this$state","initialBackgroundColorClassName","Math","ceil","random","newComment","v4","Date","_toConsumableArray","onChangeCommentInput","target","value","onChangeNameInput","_inherits","_createClass","key","_this$state2","this","onSubmit","placeholder","onChange","rows","Component","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"wSAkEeA,EA/DK,SAAAC,GAClB,IAAOC,EAAkBD,EAAlBC,eACAC,EAAsDD,EAAtDC,GAAIC,EAAkDF,EAAlDE,KAAMC,EAA4CH,EAA5CG,QAASC,EAAmCJ,EAAnCI,QAASC,EAA0BL,EAA1BK,iBAAkBC,EAAQN,EAARM,KAC/CC,EAAUL,EAAOA,EAAK,GAAGM,cAAgB,GACzCC,EAAoBL,EAAU,gBAAkB,SAChDM,EAAeN,EACjB,sEACA,qEACEO,EAAaC,YAAoBN,GAYvC,OACEO,eAAA,MAAIC,UAAU,eAAcC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCC,cAAA,OAAKF,UAAWT,EAAiBU,SAC/BC,cAAA,KAAGF,UAAU,UAASC,SAAER,MAE1BM,eAAA,OAAAE,SAAA,CACEF,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCC,cAAA,KAAGF,UAAU,WAAUC,SAAEb,IACzBW,eAAA,KAAGC,UAAU,OAAMC,SAAA,CAAEJ,EAAW,aAElCK,cAAA,KAAGF,UAAU,UAASC,SAAEZ,UAG5BU,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAChCF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKC,IAAKP,EAAcQ,IAAI,OAAOJ,UAAU,eAC7CE,cAAA,UACEF,UAAWL,EACXU,KAAK,SACLC,QA9BU,YAElBC,EADwBtB,EAAjBsB,eACOpB,EAChB,EA2B+Bc,SACtB,YAIHC,cAAA,UACEF,UAAU,SACVK,KAAK,SACLC,QAjCgB,YAEtBE,EADwBvB,EAAjBuB,eACOrB,EAChB,EA+BQ,cAAY,SAAQc,SAEpBC,cAAA,OACEF,UAAU,SACVG,IAAI,uEACJC,IAAI,gBAIVF,cAAA,MAAIF,UAAU,mBAGpB,ECzDMS,G,MAAuC,CAC3C,QACA,OACA,SACA,UACA,OACA,MACA,eAGIC,EAAQ,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,YAAA,KAAAH,GAAA,QAAAI,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA0EX,OA1EWP,EAAAQ,YAAA,KAAAV,EAAA,GAAAW,OAAAJ,KACZK,MAAQ,CACNC,UAAW,GACXC,aAAc,GACdC,aAAc,IACfb,EAEDJ,cAAgB,SAAAkB,GACd,IAAOD,EAAgBb,EAAKU,MAArBG,aAEPb,EAAKe,SAAS,CACZF,aAAcA,EAAaG,QAAO,SAAAvC,GAAO,OAAIA,EAAQF,KAAOuC,CAAS,KAEzE,EAACd,EAEDL,cAAgB,SAAApB,GACdyB,EAAKe,UAAS,SAAAE,GAAS,MAAK,CAC1BJ,aAAcI,EAAUJ,aAAaK,KAAI,SAAAC,GACvC,OAAI5C,IAAO4C,EAAY5C,GACrB6C,wBAAA,GAAWD,GAAW,IAAEzC,SAAUyC,EAAYzC,UAEzCyC,CACT,IACD,GACH,EAACnB,EAEDqB,mBAAqB,WAGnB,OAFuBrB,EAAKU,MAArBG,aAEaK,KAAI,SAAAC,GAAW,OACjC7B,cAAClB,EAAW,CAEVE,eAAgB6C,EAChBxB,cAAeK,EAAKL,cACpBC,cAAeI,EAAKJ,eAHfuB,EAAY5C,GAIjB,GAEN,EAACyB,EAEDsB,aAAe,SAAAC,GACbA,EAAMC,iBACN,IAAAC,EAAkCzB,EAAKU,MAAhCC,EAASc,EAATd,UAAWC,EAAYa,EAAZb,aACZc,EAA+B,qBAAAjB,OACnCZ,EACE8B,KAAKC,KACHD,KAAKE,SAAWhC,EAAqCO,OAAS,KAI9D0B,EAAa,CACjBvD,GAAIwD,cACJvD,KAAMmC,EACNlC,QAASmC,EACThC,KAAM,IAAIoD,KACVtD,SAAS,EACTC,iBAAkB+C,GAEpB1B,EAAKe,UAAS,SAAAE,GAAS,MAAK,CAC1BJ,aAAa,GAADJ,OAAAwB,YAAMhB,EAAUJ,cAAY,CAAEiB,IAC1CnB,UAAW,GACXC,aAAc,GACf,GACH,EAACZ,EAEDkC,qBAAuB,SAAAX,GACrBvB,EAAKe,SAAS,CACZH,aAAcW,EAAMY,OAAOC,OAE/B,EAACpC,EAEDqC,kBAAoB,SAAAd,GAClBvB,EAAKe,SAAS,CACZJ,UAAWY,EAAMY,OAAOC,OAE5B,EAACpC,CAAA,CA+CA,OAzHWsC,YAAAxC,EAAAC,GA0EXwC,YAAAzC,EAAA,EAAA0C,IAAA,SAAAJ,MAED,WACE,IAAAK,EAAgDC,KAAKhC,MAA9CC,EAAS8B,EAAT9B,UAAWC,EAAY6B,EAAZ7B,aAAcC,EAAY4B,EAAZ5B,aAEhC,OACEvB,cAAA,OAAKF,UAAU,gBAAeC,SAC5BF,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CACjCC,cAAA,MAAIF,UAAU,cAAaC,SAAC,aAC5BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,QAAMC,UAAU,OAAOuD,SAAUD,KAAKpB,aAAajC,SAAA,CACjDC,cAAA,KAAGF,UAAU,mBAAkBC,SAAC,yCAGhCC,cAAA,SACEG,KAAK,OACLL,UAAU,aACVwD,YAAY,YACZR,MAAOzB,EACPkC,SAAUH,KAAKL,oBAEjB/C,cAAA,YACEsD,YAAY,eACZxD,UAAU,gBACVgD,MAAOxB,EACPiC,SAAUH,KAAKR,qBACfY,KAAK,MAEPxD,cAAA,UAAQG,KAAK,SAASL,UAAU,aAAYC,SAAC,mBAI/CC,cAAA,OACEC,IAAI,yEACJC,IAAI,WACJJ,UAAU,aAGdE,cAAA,MAAIF,UAAU,SACdD,eAAA,KAAGC,UAAU,UAASC,SAAA,CACpBC,cAAA,QAAMF,UAAU,iBAAgBC,SAAEwB,EAAaT,SAAc,cAG/Dd,cAAA,MAAIF,UAAU,gBAAeC,SAAEqD,KAAKrB,2BAI5C,KAACvB,CAAA,CAzHW,CAASiD,aA4HRjD,ICvIAkD,G,MAFH,WAAH,OAAS1D,cAACQ,EAAQ,GAAG,GCA9BmD,IAASC,OACP5D,cAAC6D,IAAMC,WAAU,CAAA/D,SACfC,cAAC0D,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.c65cd082.chunk.js","sourcesContent":["import {formatDistanceToNow} from 'date-fns'\nimport './index.css'\n\nconst CommentItem = props => {\n  const {commentDetails} = props\n  const {id, name, comment, isLiked, initialClassName, date} = commentDetails\n  const initial = name ? name[0].toUpperCase() : ''\n  const likeTextClassName = isLiked ? 'button active' : 'button'\n  const likeImageUrl = isLiked\n    ? 'https://assets.ccbp.in/frontend/react-js/comments-app/liked-img.png'\n    : 'https://assets.ccbp.in/frontend/react-js/comments-app/like-img.png'\n  const postedTime = formatDistanceToNow(date)\n\n  const onClickLike = () => {\n    const {toggleIsLiked} = props\n    toggleIsLiked(id)\n  }\n\n  const onDeleteComment = () => {\n    const {deleteComment} = props\n    deleteComment(id)\n  }\n\n  return (\n    <li className=\"comment-item\">\n      <div className=\"comment-container\">\n        <div className={initialClassName}>\n          <p className=\"initial\">{initial}</p>\n        </div>\n        <div>\n          <div className=\"username-time-container\">\n            <p className=\"username\">{name}</p>\n            <p className=\"time\">{postedTime} ago</p>\n          </div>\n          <p className=\"comment\">{comment}</p>\n        </div>\n      </div>\n      <div className=\"buttons-container\">\n        <div className=\"like-container\">\n          <img src={likeImageUrl} alt=\"like\" className=\"like-image\" />\n          <button\n            className={likeTextClassName}\n            type=\"button\"\n            onClick={onClickLike}\n          >\n            Like\n          </button>\n        </div>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={onDeleteComment}\n          data-testid=\"delete\"\n        >\n          <img\n            className=\"delete\"\n            src=\"https://assets.ccbp.in/frontend/react-js/comments-app/delete-img.png\"\n            alt=\"delete\"\n          />\n        </button>\n      </div>\n      <hr className=\"comment-line\" />\n    </li>\n  )\n}\n\nexport default CommentItem\n","import {Component} from 'react'\nimport {v4} from 'uuid'\n\nimport CommentItem from '../CommentItem'\n\nimport './index.css'\n\nconst initialContainerBackgroundClassNames = [\n  'amber',\n  'blue',\n  'orange',\n  'emerald',\n  'teal',\n  'red',\n  'light-blue',\n]\n\nclass Comments extends Component {\n  state = {\n    nameInput: '',\n    commentInput: '',\n    commentsList: [],\n  }\n\n  deleteComment = commentId => {\n    const {commentsList} = this.state\n\n    this.setState({\n      commentsList: commentsList.filter(comment => comment.id !== commentId),\n    })\n  }\n\n  toggleIsLiked = id => {\n    this.setState(prevState => ({\n      commentsList: prevState.commentsList.map(eachComment => {\n        if (id === eachComment.id) {\n          return {...eachComment, isLiked: !eachComment.isLiked}\n        }\n        return eachComment\n      }),\n    }))\n  }\n\n  renderCommentsList = () => {\n    const {commentsList} = this.state\n\n    return commentsList.map(eachComment => (\n      <CommentItem\n        key={eachComment.id}\n        commentDetails={eachComment}\n        toggleIsLiked={this.toggleIsLiked}\n        deleteComment={this.deleteComment}\n      />\n    ))\n  }\n\n  onAddComment = event => {\n    event.preventDefault()\n    const {nameInput, commentInput} = this.state\n    const initialBackgroundColorClassName = `initial-container ${\n      initialContainerBackgroundClassNames[\n        Math.ceil(\n          Math.random() * initialContainerBackgroundClassNames.length - 1,\n        )\n      ]\n    }`\n    const newComment = {\n      id: v4(),\n      name: nameInput,\n      comment: commentInput,\n      date: new Date(),\n      isLiked: false,\n      initialClassName: initialBackgroundColorClassName,\n    }\n    this.setState(prevState => ({\n      commentsList: [...prevState.commentsList, newComment],\n      nameInput: '',\n      commentInput: '',\n    }))\n  }\n\n  onChangeCommentInput = event => {\n    this.setState({\n      commentInput: event.target.value,\n    })\n  }\n\n  onChangeNameInput = event => {\n    this.setState({\n      nameInput: event.target.value,\n    })\n  }\n\n  render() {\n    const {nameInput, commentInput, commentsList} = this.state\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"comments-container\">\n          <h1 className=\"app-heading\">Comments</h1>\n          <div className=\"comments-inputs\">\n            <form className=\"form\" onSubmit={this.onAddComment}>\n              <p className=\"form-description\">\n                Say something about 4.0 Technologies\n              </p>\n              <input\n                type=\"text\"\n                className=\"name-input\"\n                placeholder=\"Your Name\"\n                value={nameInput}\n                onChange={this.onChangeNameInput}\n              />\n              <textarea\n                placeholder=\"Your Comment\"\n                className=\"comment-input\"\n                value={commentInput}\n                onChange={this.onChangeCommentInput}\n                rows=\"6\"\n              />\n              <button type=\"submit\" className=\"add-button\">\n                Add Comment\n              </button>\n            </form>\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/comments-app/comments-img.png\"\n              alt=\"comments\"\n              className=\"image\"\n            />\n          </div>\n          <hr className=\"line\" />\n          <p className=\"heading\">\n            <span className=\"comments-count\">{commentsList.length}</span>\n            Comments\n          </p>\n          <ul className=\"comments-list\">{this.renderCommentsList()}</ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Comments\n","import Comments from './components/Comments'\n\nimport './App.css'\n\nconst App = () => <Comments />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}